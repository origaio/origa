import{_ as r,D as n,c as s,b as o,w as a,a5 as c,a4 as l,l as e,o as t,I as d,a as u}from"./chunks/framework.Z4G35HCh.js";const k=JSON.parse('{"title":"Overview","description":"","frontmatter":{"title":"Overview","slug":"overview"},"headers":[],"relativePath":"overview.md","filePath":"overview.md"}'),h={name:"overview.md"},g=l('<h1 id="üöÄ-origa" tabindex="-1">üöÄ Origa <a class="header-anchor" href="#üöÄ-origa" aria-label="Permalink to &quot;üöÄ Origa&quot;">‚Äã</a></h1><br><div class="note custom-block github-alert"><p class="custom-block-title">‚ö°Ô∏è</p><p>The Origa API provides a comprehensive suite of endpoints to seamlessly integrate AI-driven candidate assessment capabilities into your existing workflows or systems. Leveraging advanced natural language processing and machine learning techniques, our API empowers you to integrate Origa&#39;s cutting-edge voice AI to automate recruiter screening through high-quality, AI-driven conversations.</p></div><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">‚Äã</a></h2><p>The Origa API is built on a robust microservices architecture, ensuring high scalability, reliability, and performance. Our RESTful API design adheres to industry best practices, providing a secure and intuitive interface for programmatic interaction.</p><p>Key architectural components:</p><ul><li>API Gateway: Handles request routing, authentication, and rate limiting</li><li>Orchestration Layer: Coordinates the execution of various AI models and services</li><li>NLP Modules: Perform natural language understanding, sentiment analysis, and entity extraction</li><li>Machine Learning Models: Conduct candidate assessment, skill matching, and interview scheduling optimization</li><li>Data Persistence: Utilizes distributed databases and caches for efficient storage and retrieval</li></ul><h2 id="api-workflow" tabindex="-1">API Workflow <a class="header-anchor" href="#api-workflow" aria-label="Permalink to &quot;API Workflow&quot;">‚Äã</a></h2><p>The Origa API follows the following workflow:</p>',9),m=e("p",null,"The client sends the candidate's resume, job description (JD), and questionnaire to the Origa API.",-1),p=e("ul",null,[e("li",null,"The Origa API uses Text-to-Speech (TTS), Automatic Speech Recognition (ASR), and Conversation Orchestration models to conduct the telephonic screening with the candidate."),e("li",null,"The candidate undergoes the screening process, and their responses are captured."),e("li",null,"The Origa API performs a structured candidate assessment based on the screening results."),e("li",null,"The structured candidate assessment is sent back to the client for further evaluation and decision-making.")],-1);function v(f,_,w,A,b,T){const i=n("Mermaid");return t(),s("div",null,[g,(t(),o(c,null,{default:a(()=>[d(i,{id:"mermaid-51",class:"mermaid my-class",graph:"graph%20TD%0A%20%20A(client)%20--(resume%2C%20jd%2C%20questionnaire)--%3E%20B(TTS%2C%20ASR%2C%20Conversation%20orchestration)%0A%20%20B%20%3C--telephonic%20screening--%3E%20C(Candidate%20screening)%0A%20%20B%20--structured%20candidate%20assesment--%3E%20A%0A"})]),fallback:a(()=>[u(" Loading... ")]),_:1})),m,p])}const I=r(h,[["render",v]]);export{k as __pageData,I as default};
