import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.Bt76d_HT.js";const g=JSON.parse('{"title":"Error Handling","description":"","frontmatter":{"title":"Error Handling","slug":"error-handling"},"headers":[],"relativePath":"error-handling.md","filePath":"error-handling.md"}'),n={name:"error-handling.md"},r=e(`<h1 id="error-handling" tabindex="-1">Error Handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error Handling&quot;">â€‹</a></h1><p>The Origa API uses standard HTTP status codes to indicate the success or failure of API requests. In case of an error, the API will return a JSON response with an <code>error</code> object containing <code>code</code> and <code>message</code> fields.</p><p>Example Error Response:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;invalid_request&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Missing required parameter: resume_url&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,4),t=[r];function o(l,h,p,d,c,k){return i(),a("div",null,t)}const u=s(n,[["render",o]]);export{g as __pageData,u as default};
